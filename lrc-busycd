#!/usr/bin/env bash

set -x -e

#exec 200>/var/lock/lrc-livecd
#flock -n 200 || exit 1

export ROOT=busycd-rootfs
export CDROOT=busycd

rm -rf $ROOT
mkdir -p $ROOT
(
cd $ROOT
mkdir bin
mkdir boot
mkdir boot/grub
mkdir dev
mkdir etc
mkdir etc/init.d
mkdir etc/rc.d
mkdir lib
mkdir lib64
mkdir opt
mkdir proc
mkdir root
mkdir run
mkdir sbin
mkdir sys
mkdir usr
mkdir usr/bin
mkdir usr/lib
mkdir usr/local
mkdir usr/sbin
mkdir usr/share
mkdir var
)

copyit () {
	mkdir -p $(dirname $2)
	cp -L $1 $2
}

copyit /lib/x86_64-linux-gnu/libc.so.6 $ROOT/lib/x86_64-linux-gnu/.
copyit /lib64/ld-linux-x86-64.so.2 $ROOT/lib64/.
copyit /bin/busybox $ROOT/bin/.

chroot $ROOT /bin/busybox --install

cat << EOF > $ROOT/etc/inittab
::sysinit:/etc/init.d/rcS S boot
EOF

cat << EOF > $ROOT/etc/rc.d/rcS
::sysinit:/etc/init.d/rcS S boot
EOF
chmod +x $ROOT/etc/rc.d/rcS


rm -rf $CDROOT
mkdir $CDROOT
mkdir $CDROOT/boot
mkdir $CDROOT/boot/grub
mkdir $CDROOT/casper

cp /boot/System.map-$(uname -r) $CDROOT/boot/.
cp /boot/abi-$(uname -r) $CDROOT/boot/.
cp /boot/config-$(uname -r) $CDROOT/boot/.
cp /boot/initrd.img-$(uname -r) $CDROOT/boot/.
cp /boot/vmlinuz-$(uname -r) $CDROOT/boot/.
cp -r /boot/grub $CDROOT/boot/.

(
	cd $CDROOT/boot
	ln -s vmlinuz-$(uname -r) vmlinuz
	ln -s initrd.img-$(uname -r) initrd.img
)

cat << EOF > $CDROOT/boot/grub/grub.cfg
set default="0"
set timeout=20

menuentry "Ubuntu CLI" {
linux /boot/vmlinuz textonly
initrd /boot/initrd.img
}

menuentry "Memory Test" {
linux16 /boot/memtest86+.bin
}

menuentry "Boot from the first hard disk" {
set root=(hd0)
chainloader +1
}
EOF

mksquashfs $ROOT $CDROOT/casper/filesystem.squashfs

grub-mkrescue -o busy-cd.iso $CDROOT

